plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
}

loom {
    mods {
        "minecraft-cursor" {
            sourceSet sourceSets.main
        }
    }

    accessWidenerPath = file("src/main/resources/minecraft-cursor.accesswidener")
}

dependencies {
    api project(path: ":api", configuration: "namedElements")
    include project(path: "api")

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    testImplementation "net.fabricmc:fabric-loader-junit:${project.loader_version}"

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
}

allprojects {
    apply plugin: "java"

    processResources {
        inputs.property "version", rootProject.version

        filesMatching("fabric.mod.json") {
            expand "version": rootProject.version
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        maven {
            url = uri(new File(project.gradle.gradleUserHomeDir.parent, 'maven').absolutePath)
        }
    }
}

tasks.register('getProperties') {
    doLast {
        println "MINECRAFT_VERSION=${minecraft_version}"
        println "MOD_VERSION=${mod_version}"
        println "JAVA_VERSION=${java.targetCompatibility}"
        println "RELEASE_NAME=Minecraft Cursor ${mod_version}"
    }
}

test {
    useJUnitPlatform()
}